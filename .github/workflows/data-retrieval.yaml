name: Retrieve Newly Pushed Data from FluSight-forecast-hub submodule

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ data-retrieval-event ]

jobs:
  sync-and-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true' # This checks out submodules

      - name: Check and Copy New Files
        shell: bash
        id: check-copy
        run: |
          # Run a bash script to check and maybe copy files to super repo:
          # 1. Compare files in data source path with the super repo's data target path
          # 2. Copy new files if found
          # 3. Echo an output variable if new files are copied, to determine if dispatch is needed
          
          # The 4 teams we want data of:
          team_names=("MOBS-GLEAM_FLUH" "MIGHTE-Nsemble" "NU_UCSD-GLEAM_AI_FLUH" "CEPH-Rtrend_fluH")
          
          NEW_FILES_COPIED=false
          
          DATA_SOURCE_LOCATION_PATH='FluSight-forecast-hub/model-output'
          DATA_TARGET_LOCATION_PATH='data/unprocessed'
          
          for team in "${team_names[@]}"; do
            echo "Checking for new files from $team..."
          
            # Make sure team subdirectory exists from proceeding
            if [ -d "$DATA_SOURCE_LOCATION_PATH/$team" ]; then
              mkdir -p "$DATA_TARGET_LOCATION_PATH/$team"
          
              for file in "$DATA_SOURCE_LOCATION_PATH/$team"/*; do
                filename=$(basename "$file")
          
                if [ ! -f "$DATA_TARGET_LOCATION_PATH/$team/$filename" ]; then
                  cp "$file" "$DATA_TARGET_LOCATION_PATH/$team/"
                  echo "Copied $filename to $DATA_TARGET_LOCATION_PATH/$team/"
                  NEW_FILES_COPIED=true
                fi
              done
            else
              echo "Error: team subdirectory do not exist."
            fi
            echo
          done
          echo "\n"
          echo "Script done!"
          echo "NEW_FILES_COPIED=$NEW_FILES_COPIED" >> $GITHUB_ENV

      #TODO After setting up branch protection, refactor this so it creates a new branch and PR instead of pushing to main
      - name: Add and Commit New Files
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Add new files from FluSight-forecast-hub"
          git push

      - name: Dispatch to Data Processing Workflow If New Files Are Copied
        if: env.NEW_FILES_COPIED == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: data-processing-event
          # Optional: Pass information about the copied files in client-payload
#          client-payload: '{"ref":"main", "files_copied": "true"}'
