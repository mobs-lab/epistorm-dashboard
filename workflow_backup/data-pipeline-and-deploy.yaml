name: Data Update and Deploy

on:
  schedule:
    - cron: '30 6-21/3 * * 4'  # Runs every Thursday, starting from 6:30 AM UTC until 9:30 PM UTC, every 3 hours
  workflow_dispatch:

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Update Submodule
        run: |
          git pull origin main
          git submodule init
          git submodule update
          git submodule update --remote
          git submodule foreach git pull origin main

      - name: Check and Copy New Files
        shell: bash
        id: check-copy
        run: |
          chmod +x ./bash_scripts/data_retrieval.sh
          source ./bash_scripts/data_retrieval.sh
          echo "NEW_FILES_COPIED=$NEW_FILES_COPIED" >> $GITHUB_ENV

      - name: Setup Python
        if: env.NEW_FILES_COPIED == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Python Dependencies
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          pip install numpy pandas glob2

      - name: Create subdirectory within public/data/processed
        if: env.NEW_FILES_COPIED == 'true'
        shell: bash
        run: |
          chmod +x ./bash_scripts/setup_directories.sh
          ./bash_scripts/setup_directories.sh

      - name: Execute Data Transformation
        if: env.NEW_FILES_COPIED == 'true'
        run: python python_scripts/transform_data.py

      - name: Commit Changes to Main
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add public/data/unprocessed/* public/data/ground-truth/* public/data/processed/*
          git commit -m "Update and process data via GitHub Actions"
          git push origin main

      - name: Create Release Branch
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          git checkout -b release/$(date +%Y%m%d)
          git push origin release/$(date +%Y%m%d)

      - name: Merge Release to Production
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          git checkout production
          git merge --no-ff release/$(date +%Y%m%d) -m "Merge release/$(date +%Y%m%d) into production"
          git push origin production

      - name: Set up Cloud SDK
        if: env.NEW_FILES_COPIED == 'true'
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to App Engine
        if: env.NEW_FILES_COPIED == 'true'
        run: |
          gcloud app deploy app.yaml --quiet